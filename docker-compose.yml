services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: art-postgres
    environment:
      POSTGRES_DB: artmanagement
      POSTGRES_USER: artuser
      POSTGRES_PASSWORD: artpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U artuser -d artmanagement"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - art-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: art-backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=artuser
      - DB_PASSWORD=artpassword
      - DB_NAME=artmanagement
      - DB_SSLMODE=disable
      # Auto-run migrations and seeding (set AUTO_SEED=true to seed data)
      - AUTO_MIGRATE=${AUTO_MIGRATE:-true}
      - AUTO_SEED=${AUTO_SEED:-false}
      - ETSY_API_KEY=${ETSY_API_KEY:-}
      - ETSY_API_SECRET=${ETSY_API_SECRET:-}
      - ETSY_SHOP_ID=${ETSY_SHOP_ID:-}
      - ETSY_ACCESS_TOKEN=${ETSY_ACCESS_TOKEN:-}
      - ETSY_API_BASE_URL=${ETSY_API_BASE_URL:-https://openapi.etsy.com/v3}
      - ETSY_SYNC_ENABLED=${ETSY_SYNC_ENABLED:-false}
      - ETSY_SYNC_INTERVAL_PRODUCTS=${ETSY_SYNC_INTERVAL_PRODUCTS:-3600}
      - ETSY_SYNC_INTERVAL_INVENTORY=${ETSY_SYNC_INTERVAL_INVENTORY:-1800}
      - SCHEDULER_ENABLED=${SCHEDULER_ENABLED:-true}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
    volumes:
      - uploads_data:/app/uploads
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - art-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: art-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - art-network

networks:
  art-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local
