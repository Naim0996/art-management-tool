services:
  # PostgreSQL Database (Test)
  postgres-test:
    image: postgres:16-alpine
    container_name: art-postgres-test
    env_file:
      - .env.test
    environment:
      POSTGRES_DB: ${DB_NAME:-artmanagement_test}
      POSTGRES_USER: ${DB_USER:-testuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-testpassword}
      POSTGRES_INITDB_ARGS: "-E UTF8"
    ports:
      - "${DB_PORT:-5433}:5432"
    volumes:
      - ./backend/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./backend/migrations:/docker-entrypoint-initdb.d/migrations
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-testuser} -d ${DB_NAME:-artmanagement_test}"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - art-network-test
    tmpfs:
      # Use tmpfs for faster test database
      - /var/lib/postgresql/data:rw,noexec,nosuid,size=512m

  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: art-backend-test
    ports:
      - "${PORT:-8081}:8080"
    env_file:
      - .env.test
    environment:
      - PORT=${PORT:-8080}
      - ENVIRONMENT=test
      - DB_HOST=postgres-test
      - DB_PORT=5432
      # Test-specific overrides
      - AUTO_MIGRATE=true
      - AUTO_SEED=false
      - SCHEDULER_ENABLED=false
      - RATE_LIMIT_ENABLED=false
      # Etsy Integration (for testing)
      - ETSY_API_KEY=${ETSY_API_KEY:-}
      - ETSY_API_SECRET=${ETSY_API_SECRET:-}
      - ETSY_SHOP_ID=${ETSY_SHOP_ID:-}
      - ETSY_SHOP_NAME=${ETSY_SHOP_NAME:-}
      - ETSY_SHOP_URL=${ETSY_SHOP_URL:-}
      - ETSY_REDIRECT_URI=${ETSY_REDIRECT_URI:-http://localhost:3001/admin/etsy-sync/callback}
      - ETSY_SYNC_ENABLED=false
    volumes:
      - ./backend:/app
      - uploads_test_data:/app/uploads
    restart: unless-stopped
    depends_on:
      postgres-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - art-network-test

  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: art-frontend-test
    ports:
      - "3002:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend-test:8080
      - NODE_ENV=test
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend-test:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - art-network-test

networks:
  art-network-test:
    driver: bridge

volumes:
  uploads_test_data:
    driver: local